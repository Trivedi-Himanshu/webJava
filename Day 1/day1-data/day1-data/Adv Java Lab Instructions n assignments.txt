Day 1
1. import day1.2 , to revise DB layered application
(Edit build path n user name , password)

Hands on : 
1. Refer to online voting case study
Prepare DAO, POJO layers , Write a simple tester/s to test it in standalone application.

1.0 Copy candidates table from "day1-data\day1_help\jdbc help\sql\voting sql.txt" n also copy data

1.1 List all candidates

Table : candidates
POJO : Candidate
DBUtils : copy
DAO : CandidateDao i/f
List<Candidate> getAllCandidates() throws SE           //have to create empty list 
CandidateDaoImpl
1. import : java.sql , import static : utils
2. state : cn , pst1
3. def ctor : openCn , pst1=cn.prepareStatement(sql);
4. clean up : close pst1, cn
5. getAllCandidates() : exec query --RST --while loop --ORM 


ListAllCandidates : Tester (main)
1. create dao instance
2. invoke dao's method--list.forEach(...);
3. dao's cleanup.

1.2 Increment candidate's votes
i/p : candidate id

1.3 Display details of top 2 candidates , having max votes

1.4 Display partywise votes 
(eg : BJP 50 , Congress 29 ...)

2. Add tomcat web server in Eclipse(STS 3.9.18) IDE.
(Refer : "day1-data\day1_help\Web Server n Java EE docs\Installation steps for Tomcat.txt")


Reading H.W
Today's sequence 
SQL Injection readme.

